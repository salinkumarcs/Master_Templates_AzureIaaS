{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VMs": {
      "type": "array",
      "metadata": {
        "description": "Details of the VM to be created. Maximum of 8 VM's allowed."
      },
      "maxLength": 8,
      "minLength": 1
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "OSPublisher": {
      "type": "string",
      "metadata": {
        "description": "The OS publisher for the VM."
      }
    },
    "OSOffer": {
      "type": "string",
      "metadata": {
        "description": "The OS offer for the VM."
      }
    },
    "OSVersion": {
      "type": "string",
      "metadata": {
        "description": "The OS version for the VM. This will pick a fully patched image of this given OS version."
      }
    },
    "deployAvailabilitySet": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy VM's in an availability set."
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "blank",
      "metadata": {
        "description": "The name of the availability set VM's will be provisioned into."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of VM sku."
      }
    },
    "sizeOfDataDisk": {
      "type": "int",
      "allowedValues": [
        32,
        64,
        128,
        256,
        512,
        1024,
        2048
      ],
      "metadata": {
        "description": "The size in GB you want the data disk to be."
      }
    },
    "dataDiskType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of data disk wanted."
      }
    },
    "backupVM": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Backup the server with recovery services vault."
      }
    },
    "applyHUB": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Apply HUB licensing or not."
      }
    },
    "coreSubscriptionID": {
      "type": "string",
      "metadata": {
        "description": "The subscription ID of the where resources like log analytics workspace are."
      }
    },
    "dataDiskURI": {
      "type": "string",
      "metadata": {
        "description": "The URI of the dataDisks.json _linkedTemplate."
      }
    },
    "deployDSC": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Boolean to decide whether to deploy DSC or not."
      }
    },
    "dscScript": {
      "type": "string",
      "metadata": {
        "description": "Name of DSC script."
      }
    },
    "dscPackageUri": {
      "type": "string",
      "metadata": {
        "description": "URI to zip file for DSC package"
      }
    },
    "_sasToken": {
      "type": "string",
      "metadata": {
        "description": "The secure SAS token to the linked templates and DSC if used."
      }
    }
  },
  "variables": {
    "availabilitySet": {
      "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('availabilitySetName'))]"
    },
    "dataDiskURI": "[concat(parameters('dataDiskURI'),parameters('_sasToken'))]"
  },
  "resources": [
    {
      "condition": "[parameters('deployAvailabilitySet')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[parameters('VMs')[0].location]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2,
        "managed": true
      }
    },
    {
      "name": "[concat(parameters('VMs')[copyIndex()].name, '-nic01')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "location": "[parameters('VMs')[copyIndex()].location]",
      "copy": {
        "name": "nicLoop",
        "count": "[length(parameters('VMs'))]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[concat(resourceId(parameters('VMs')[copyIndex()].virtualNetworkResourceGroup,'Microsoft.Network/virtualNetworks', parameters('VMs')[copyIndex()].virtualNetworkName),'/subnets/', parameters('VMs')[copyIndex()].subNetName)]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('VMs')[copyIndex()].name]",
      "location": "[parameters('VMs')[copyIndex()].location]",
      "dependsOn": [
        "nicLoop",
        "[parameters('availabilitySetName')]"
      ],
      "copy": {
        "name": "vmLoop",
        "count": "[length(parameters('VMs'))]"
      },
      "properties": {
        "availabilitySet": "[if(bool(parameters('deployAvailabilitySet')), variables('availabilitySet'), json('null'))]",
        "licenseType": "[if(bool(parameters('applyHUB')),'Windows_Server', json('null'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VMs')[copyIndex()].name]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('OSPublisher')]",
            "offer": "[parameters('OSOffer')]",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('VMs')[copyIndex()].name,'-os')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('VMs')[copyIndex()].osDiskType]"
            }
          },
          "dataDisks": "[reference(concat('nestedDataDisks-', copyIndex())).outputs.result.value]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('VMs')[copyIndex()].name, '-nic01'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId(parameters('VMs')[copyIndex()].diagnosticsStorageAccountResourceGroup, 'Microsoft.Storage/storageAccounts', parameters('VMs')[copyIndex()].diagnosticsStorageAccount), '2015-06-15').primaryEndpoints['blob']]"
          }
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "[concat(parameters('VMs')[copyIndex()].name,'-LogAnalytics')]",
          "apiVersion": "2017-03-30",
          "tags": {
            "displayName": "VM Extension - LogAnalytics"
          },
          "location": "[parameters('VMs')[copyIndex()].location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VMs')[copyIndex()].name)]"
          ],
          "properties": {
            "publisher": "Microsoft.EnterpriseCloud.Monitoring",
            "type": "MicrosoftMonitoringAgent",
            "typeHandlerVersion": "1.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "workspaceId": "[reference(resourceId(parameters('coreSubscriptionID'), parameters('VMs')[copyIndex()].logAnalyticsResourceGroup, 'Microsoft.OperationalInsights/workspaces/', parameters('VMs')[copyIndex()].logAnalyticsWorkspaceName), '2015-03-20').customerId]"
            },
            "protectedSettings": {
              "workspaceKey": "[listKeys(resourceId(parameters('coreSubscriptionID'), parameters('VMs')[copyIndex()].logAnalyticsResourceGroup, 'Microsoft.OperationalInsights/workspaces/', parameters('VMs')[copyIndex()].logAnalyticsWorkspaceName), '2015-03-20').primarySharedKey]"
            }
          }
        },
        {
          "condition": "[parameters('deployDSC')]",
          "name": "[concat(parameters('VMs')[copyIndex()].name, '-' , 'DesiredStateConfiguration')]",
          "type": "extensions",
          "location": "[parameters('VMs')[copyIndex()].location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('VMs')[copyIndex()].name)]"
          ],
          "tags": {
            "displayName": "VM Extension - DSC Configuration"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[parameters('dscPackageUri')]",
                "script": "[parameters('dscScript')]",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[parameters('VMs')[copyIndex()].name]"
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_sasToken')]"
            }
          }
        }
      ]
    },
    {
      "condition": "[parameters('backupVM')]",
      "apiVersion": "2017-05-10",
      "name": "[concat(parameters('VMs')[copyIndex()].name, '-BackupIntent')]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('VMs')[copyIndex()].recoveryServicesVaultResourceGroup]",
      "dependsOn": [
        "vmLoop"
      ],
      "copy": {
        "name": "BackupLoop",
        "count": "[length(parameters('VMs'))]"
      },
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "name": "[concat(parameters('VMs')[copyIndex()].recoveryServicesVaultName, '/', 'Azure', '/', 'vm;iaasvmcontainerv2;', resourceGroup().name, ';', parameters('VMs')[copyIndex()].name)]",
              "apiVersion": "2017-07-01",
              "type": "Microsoft.RecoveryServices/vaults/backupFabrics/backupProtectionIntent",
              "properties": {
                "friendlyName": "[concat(parameters('VMs')[copyIndex()].name,'-BackupIntent')]",
                "protectionIntentItemType": "AzureResourceItem",
                "policyId": "[resourceId(parameters('VMs')[copyIndex()].recoveryServicesVaultResourceGroup, 'Microsoft.RecoveryServices/vaults/backupPolicies', parameters('VMs')[copyIndex()].recoveryServicesVaultName, parameters('VMs')[copyIndex()].recoveryServicesbackupPolicy)]",
                "sourceResourceId": "[resourceId(resourceGroup().name, 'Microsoft.Compute/virtualMachines', parameters('VMs')[copyIndex()].name)]"
              }
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[concat('nestedDataDisks-', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "deploycopy",
        "count": "[length(parameters('VMs'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('dataDiskURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('VMs')[copyIndex()].name]"
          },
          "numDataDisks": {
            "value": "[parameters('VMs')[copyIndex()].numberOfDataDisks]"
          },
          "sizeOfDataDisk": {
            "value": "[parameters('sizeOfDataDisk')]"
          },
          "dataDiskType": {
            "value": "[parameters('dataDiskType')]"
          }
        }
      }
    }
  ]
}